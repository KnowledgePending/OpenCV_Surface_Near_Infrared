//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#pragma warning(push)
#pragma warning(disable: 4100) // unreferenced formal parameter

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "MainPage.xaml.h"

void ::SDKTemplate::MainPage::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///MainPage.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}


/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class SDKTemplate::MainPage::MainPage_obj16_Bindings 
    : public ::XamlBindingInfo::ValueTypeXamlBindings<::SDKTemplate::Scenario, ::XamlBindingInfo::XamlBindingTrackingBase>
{
public:
    MainPage_obj16_Bindings()
    {
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 16: // MainPage.xaml line 37
                this->obj16 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
        }
    }

    void DisconnectUnloadedObject(int connectionId)
    {
        throw ref new ::Platform::InvalidArgumentException("No unloadable elements to disconnect.");
    }

    void Recycle()
    {
    }

    void ProcessBindings(::Platform::Object^ item, int itemIndex, int phase, int* nextPhase)
    {
        switch (phase)
        {
            case 0:
                *nextPhase = -1;
                this->SetDataRoot(static_cast<::SDKTemplate::Scenario>(item));
                if (this->_dataContextChangedToken.Value != 0)
                {
                    this->obj16.Resolve<::Windows::UI::Xaml::Controls::TextBlock>()->DataContextChanged -= this->_dataContextChangedToken;
                    this->_dataContextChangedToken.Value = 0;
                }
                this->_isInitialized = true;
                break;
            default:
                *nextPhase = -1;
                break;
        }
        this->Update_((::SDKTemplate::Scenario) item, 1 << phase);
    }

private:
    // Fields for each control that has bindings.
    ::Platform::WeakReference obj16;

    // Update methods for each path node used in binding steps.
    void Update_(::SDKTemplate::Scenario obj, int phase)
    {
            if ((phase & (NOT_PHASED | (1 << 0))) != 0)
            {
                this->Update_Title(obj.Title, phase);
            }
    }
    void Update_Title(::Platform::String^ obj, int phase)
    {
        if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            // MainPage.xaml line 37
            if (this->obj16 != nullptr)
            {
                Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj16.Resolve<::Windows::UI::Xaml::Controls::TextBlock>(), obj, nullptr);
            }
        }
    }
    static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(::Windows::UI::Xaml::Controls::TextBlock^ obj, ::Platform::String^ value, ::Platform::String^ targetNullValue)
    {
        if (value == nullptr && targetNullValue != nullptr)
        {
            value = targetNullValue;
        }
        obj->Text = value;
    }
};

void ::SDKTemplate::MainPage::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
    case 2:
        {
            this->Splitter = safe_cast<::Windows::UI::Xaml::Controls::SplitView^>(__target);
        }
        break;
    case 3:
        {
            this->HeaderPanel = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 4:
        {
            this->WindowsLogo = safe_cast<::Windows::UI::Xaml::Controls::Image^>(__target);
        }
        break;
    case 5:
        {
            this->Header = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 6:
        {
            ::Windows::UI::Xaml::Controls::Primitives::ToggleButton^ element6 = safe_cast<::Windows::UI::Xaml::Controls::Primitives::ToggleButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Primitives::ToggleButton^>(element6))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::SDKTemplate::MainPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&MainPage::Button_Click);
        }
        break;
    case 7:
        {
            this->Hamburger = safe_cast<::Windows::UI::Xaml::Controls::FontIcon^>(__target);
        }
        break;
    case 8:
        {
            this->SampleTitle = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 9:
        {
            this->ScenarioControl = safe_cast<::Windows::UI::Xaml::Controls::ListBox^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ListBox^>(this->ScenarioControl))->SelectionChanged += ref new ::Windows::UI::Xaml::Controls::SelectionChangedEventHandler(this, (void (::SDKTemplate::MainPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::SelectionChangedEventArgs^))&MainPage::ScenarioControl_SelectionChanged);
        }
        break;
    case 10:
        {
            this->FooterPanel = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 11:
        {
            this->Copyright = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 12:
        {
            this->LinksPanel = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 13:
        {
            ::Windows::UI::Xaml::Controls::HyperlinkButton^ element13 = safe_cast<::Windows::UI::Xaml::Controls::HyperlinkButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::HyperlinkButton^>(element13))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::SDKTemplate::MainPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&MainPage::Footer_Click);
        }
        break;
    case 14:
        {
            this->PrivacyLink = safe_cast<::Windows::UI::Xaml::Controls::HyperlinkButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::HyperlinkButton^>(this->PrivacyLink))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::SDKTemplate::MainPage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&MainPage::Footer_Click);
        }
        break;
    case 17:
        {
            this->ScenarioFrame = safe_cast<::Windows::UI::Xaml::Controls::Frame^>(__target);
        }
        break;
    case 18:
        {
            this->StatusPanel = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 19:
        {
            this->StatusLabel = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    case 20:
        {
            this->StatusBorder = safe_cast<::Windows::UI::Xaml::Controls::Border^>(__target);
        }
        break;
    case 21:
        {
            this->StatusBlock = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
        }
        break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::SDKTemplate::MainPage::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    ::XamlBindingInfo::XamlBindings^ bindings = nullptr;
    switch (__connectionId)
    {
        case 16: // MainPage.xaml line 37
            {
                ::Windows::UI::Xaml::Controls::TextBlock^ element16 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                MainPage_obj16_Bindings* objBindings = new MainPage_obj16_Bindings();
                objBindings->SetDataRoot(element16->DataContext);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                bindings->SubscribeForDataContextChanged(element16);
                ::Windows::UI::Xaml::DataTemplate::SetExtensionInstance(element16, bindings);
                ::Windows::UI::Xaml::Markup::XamlBindingHelper::SetDataTemplateComponent(element16, bindings);
            }
            break;
    }
    return bindings;
}

#pragma warning(pop)


